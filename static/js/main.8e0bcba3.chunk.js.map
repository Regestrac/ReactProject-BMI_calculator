{"version":3,"sources":["components/BmiList.js","components/BmiScore.js","components/Form.js","App.js","index.js"],"names":["BmiList","_ref","range","bmi","react_default","a","createElement","className","scope","underWeight","low","normal","high","overWeight","obesityOne","obesityTwo","obesityThree","BmiScore","bmiNo","bmiName","changeWeight","type","weight","Form","getData","_useState","useState","_useState2","Object","slicedToArray","Weight","setWeight","_useState3","_useState4","Height","setHeight","_useState5","_useState6","Alert","setAlert","onSubmit","e","preventDefault","isNaN","value","onChange","target","required","App","Bmi","setBmi","BmiType","setBmiType","ChangeWeight","setChangeWeight","_useState7","_useState8","Show","setShow","_useState9","_useState10","BmiRange","setBmiRange","calBmi","w","h","toFixed","calWeight","weightChange","weightType","components_Form","components_BmiScore","components_BmiList","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"uQAsDeA,MApDf,SAAAC,GAA8B,IAAZC,EAAYD,EAAZC,MAAMC,EAAMF,EAANE,IACtB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uDACfH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIE,MAAM,OAAV,QACAJ,EAAAC,EAAAC,cAAA,MAAIE,MAAM,OAAV,OACAJ,EAAAC,EAAAC,cAAA,MAAIE,MAAM,OAAV,YAGJJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,EAAI,MAAQA,EAAI,EAAI,0BAA0B,IAC3DC,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,eAAUJ,EAAMO,YAAYC,IAA5B,QAGFN,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,GAAK,MAAQA,EAAI,GAAK,0BAA0B,IAC7DC,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UAAKJ,EAAMS,OAAOD,IAAlB,SAA6BR,EAAMS,OAAOC,KAA1C,QAGFR,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,GAAK,IAAMA,EAAI,GAAK,yBAAyB,IAC1DC,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UAAKJ,EAAMW,WAAWH,IAAtB,SAAiCR,EAAMW,WAAWD,KAAlD,QAEFR,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,GAAK,IAAMA,EAAI,GAAK,0BAA0B,IAC3DC,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UAAKJ,EAAMY,WAAWJ,IAAtB,SAAiCR,EAAMY,WAAWF,KAAlD,QAEFR,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,GAAK,IAAMA,EAAI,GAAK,uBAAuB,IACxDC,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UAAKJ,EAAMa,WAAWL,IAAtB,SAAiCR,EAAMa,WAAWH,KAAlD,QAEFR,EAAAC,EAAAC,cAAA,MAAKC,UAAWJ,GAAK,GAAK,yBAAyB,IACjDC,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,eAAUJ,EAAMc,aAAaJ,KAA7B,mBC5BCK,MAff,SAAAhB,GAAkD,IAA/BiB,EAA+BjB,EAA/BiB,MAAOC,EAAwBlB,EAAxBkB,QAASC,EAAenB,EAAfmB,aACjC,OACEhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaW,GAC5Bd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYY,GACN,aAApBC,EAAaC,MAAsBjB,EAAAC,EAAAC,cAAA,+BAAsBF,EAAAC,EAAAC,cAAA,SAAIc,EAAaE,OAAjB,QACrC,aAApBF,EAAaC,MAAsBjB,EAAAC,EAAAC,cAAA,+BAAsBF,EAAAC,EAAAC,cAAA,SAAIc,EAAaE,OAAjB,QACrC,WAApBF,EAAaC,MAAoBjB,EAAAC,EAAAC,cAAA,gECqC3BiB,MA9Cf,SAAAtB,GAAyB,IAAVuB,EAAUvB,EAAVuB,QAAUC,EACOC,mBAAS,IADhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdK,EADcH,EAAA,GACNI,EADMJ,EAAA,GAAAK,EAEON,mBAAS,IAFhBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEdE,EAFcD,EAAA,GAENE,EAFMF,EAAA,GAAAG,EAGKV,oBAAS,GAHdW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGdE,EAHcD,EAAA,GAGPE,EAHOF,EAAA,GAerB,OACIjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yDACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2CAAd,kBACAH,EAAAC,EAAAC,cAAA,QAAMkC,SAfF,SAACC,GACbA,EAAEC,iBACCC,MAAMb,IAAWa,MAAMT,GACtBK,GAAS,IAETf,EAAQM,EAAOI,GACfK,GAAS,KASqBhC,UAAU,IAChCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAjB,eACAH,EAAAC,EAAAC,cAAA,SAAOe,KAAK,OAAOd,UAAU,mBAAmBqC,MAAOd,EAAQe,SAAU,SAACJ,GAAD,OAAKV,EAAUU,EAAEK,OAAOF,QAAQG,UAAQ,MAGzH3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAjB,aACAH,EAAAC,EAAAC,cAAA,SAAOe,KAAK,OAAOd,UAAU,mBAAmBqC,MAAOV,EAAQW,SAAU,SAACJ,GAAD,OAAKN,EAAUM,EAAEK,OAAOF,QAAQG,UAAQ,MAGzH3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,UAAQe,KAAK,SAASd,UAAU,mBAAhC,eAKf+B,GAASlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAf,qCC2CXyC,MA/Ef,WAAe,IAAAvB,EACSC,mBAAS,SADlBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNwB,EADMtB,EAAA,GACDuB,EADCvB,EAAA,GAAAK,EAEiBN,mBAAS,YAF1BO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAENmB,EAFMlB,EAAA,GAEGmB,EAFHnB,EAAA,GAAAG,EAG2BV,mBAAS,CAAEJ,OAAQ,GAAID,KAAM,KAHxDgB,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGNiB,EAHMhB,EAAA,GAGQiB,EAHRjB,EAAA,GAAAkB,EAIW7B,oBAAS,GAJpB8B,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAINE,EAJMD,EAAA,GAIAE,EAJAF,EAAA,GAAAG,EAKmBjC,mBAAS,CACvCjB,YAAa,CAAEC,IAAM,IACrBC,OAAQ,CAAED,IAAK,GAAIE,KAAM,IACzBC,WAAY,CAAEH,IAAK,GAAIE,KAAM,IAC7BE,WAAY,CAAEJ,IAAK,GAAIE,KAAM,IAC7BG,WAAY,CAAEL,IAAK,GAAIE,KAAM,IAC7BI,aAAc,CAAEJ,KAAM,MAXXgD,EAAAhC,OAAAC,EAAA,EAAAD,CAAA+B,EAAA,GAKNE,EALMD,EAAA,GAKIE,EALJF,EAAA,GA8BPG,EAAS,SAACC,EAAGC,GAAJ,OAAWD,GAAKC,EAAIA,IAAIC,QAAQ,IACzCC,EAAY,SAAChE,EAAK8D,GAAN,OAAa9D,EAAM8D,EAAIA,GAAGC,QAAQ,IAC9CE,EAAe,SAACjE,EAAK6D,EAAG9D,GAE5B,OAAIC,EAAM,KACI,CAAEmB,QAASpB,EAAMS,OAAOD,IAAMsD,GAAGE,QAAQ,GAAI7C,KAAM,YAEtDlB,GAAO,GACJ,CAAEmB,QAAS0C,EAAI9D,EAAMS,OAAOC,MAAMsD,QAAQ,GAAI7C,KAAM,YAGpD,CAAEC,OAAQ,EAAGD,KAAM,WAI7BgD,EAAa,SAAClE,GAClB,OAAIA,EAAM,KACD,cACEA,GAAO,MAAQA,EAAM,GACvB,SACEA,GAAO,IAAMA,EAAM,GACrB,aACEA,GAAO,IAAMA,EAAM,GACrB,kBACEA,GAAO,IAAMA,EAAM,GACrB,mBACEA,GAAO,GACT,yBADF,GAIT,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgE,EAAD,CAAM9C,QAjDQ,SAACwC,EAAGC,GACpB,IAAI9D,EAAM4D,EAAOC,EAAGC,GACpBf,EAAO/C,GACPiD,EAAWiB,EAAWlE,IACtB,IAAMD,EAAQ,CACZO,YAAa,CAAEC,IAAKyD,EAAU,OAAQF,IACtCtD,OAAQ,CAAED,IAAKyD,EAAU,KAAMF,GAAIrD,KAAMuD,EAAU,OAAQF,IAC3DpD,WAAY,CAAEH,IAAKyD,EAAU,GAAIF,GAAIrD,KAAMuD,EAAU,OAAQF,IAC7DnD,WAAY,CAAEJ,IAAKyD,EAAU,GAAIF,GAAIrD,KAAMuD,EAAU,OAAQF,IAC7DlD,WAAY,CAAEL,IAAKyD,EAAU,GAAIF,GAAIrD,KAAMuD,EAAU,OAAQF,IAC7DjD,aAAc,CAAEJ,KAAMuD,EAAU,GAAIF,KAEtCH,EAAY5D,GACZoD,EAAgBc,EAAajE,EAAK6D,EAAG9D,IACrCwD,GAAQ,MAoCNtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACdkD,GACCrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACiE,EAAD,CAAUrD,MAAO+B,EAAK9B,QAASgC,EAAS/B,aAAciC,KAExDjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACkE,EAAD,CAAStE,MAAO2D,EAAU1D,IAAK8C,SCxE9BwB,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzE,EAAAC,EAAAC,cAACF,EAAAC,EAAMyE,WAAP,KACE1E,EAAAC,EAAAC,cAACyE,EAAD","file":"static/js/main.8e0bcba3.chunk.js","sourcesContent":["import React from 'react'\r\nimport './bmiList.css'\r\nfunction BmiList({range,bmi}) {\r\n  return (\r\n    <div>\r\n      <div className=\"table-box col-10\">\r\n        <table className=\"table text-center text-white table-bordered bg-dark\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Type</th>\r\n              <th scope=\"col\">BMI</th>\r\n              <th scope=\"col\">Weight</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr className={bmi<18.5 && bmi>0 ? \"border-primary border-3\":\"\"}>\r\n              <td>Underweight</td>\r\n              <td>&lt; 18.5</td>\r\n              <td>&lt; {range.underWeight.low} KG</td>\r\n\r\n            </tr>\r\n            <tr className={bmi>=18.5 && bmi<25 ? \"border-success border-3\":\"\"}>\r\n              <td>Normal</td>\r\n              <td>18.5 - 24.99</td>\r\n              <td>{range.normal.low} KG - {range.normal.high} KG</td>\r\n\r\n            </tr>\r\n            <tr className={bmi>=25 && bmi<30 ? \"border-danger border-3\":\"\"}>\r\n              <td>Overweight</td>\r\n              <td>25 - 29.99</td>\r\n              <td>{range.overWeight.low} KG - {range.overWeight.high} KG</td>\r\n            </tr>\r\n            <tr className={bmi>=30 && bmi<35 ? \"border-warning border-3\":\"\"}>\r\n              <td>Obesity class I</td>\r\n              <td>30 - 34.99</td>\r\n              <td>{range.obesityOne.low} KG - {range.obesityOne.high} KG</td>\r\n            </tr>\r\n            <tr className={bmi>=35 && bmi<40 ? \"border-info border-3\":\"\"}>\r\n              <td>Obesity class II</td>\r\n              <td>35 - 39.99</td>\r\n              <td>{range.obesityTwo.low} KG - {range.obesityTwo.high} KG</td>\r\n            </tr>\r\n            <tr  className={bmi>=40 ? \"border-danger border-3\":\"\"}>\r\n              <td>Obesity class III</td>\r\n              <td>&gt;= 40</td>\r\n              <td>&gt; {range.obesityThree.high} KG</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BmiList","import React from 'react'\r\nimport './bmiScore.css'\r\nfunction BmiScore({bmiNo, bmiName, changeWeight}) {\r\n  return (\r\n    <div className=\"bmi-score\">\r\n      <h3 className=\"bmi-heading\">Your BMI Score</h3>\r\n      <div className=\"bmi\">\r\n        <div className=\"bmi-value\">{bmiNo}</div>\r\n        <div className=\"bmi-type\">{bmiName}</div>\r\n        {changeWeight.type===\"positive\" && (<div>You need to lose <b>{changeWeight.weight} KG</b></div>)}\r\n        {changeWeight.type===\"negative\" && (<div>You need to gain <b>{changeWeight.weight} KG</b></div>)}\r\n        {changeWeight.type===\"normal\" && (<div>congratulations! You have Normal weight.</div>)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BmiScore","import React,{ useState } from \"react\";\r\nimport './form.css';\r\nfunction Form({getData}) { //passing the details as props\r\n    const [Weight, setWeight] = useState(\"\"); \r\n    const [Height, setHeight] = useState(\"\");\r\n    const [Alert, setAlert] = useState(false);\r\n    const onSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(isNaN(Weight) || isNaN(Height)){ //checks wheather the input value is number\r\n            setAlert(true)\r\n        }else{\r\n            getData(Weight,Height);  //passes the values only if it is number\r\n            setAlert(false)\r\n            // setHeight(\"\") //used to clear the input field after checking bmi each time\r\n            // setWeight(\"\")\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"formdiv\">\r\n            <div className=\"col-10 col-sm-8 col-md-6 col-lg-5 col-xl-4 px-4 forms\">\r\n                <h1 className=\"text-center pt-2 mb-4 text-secondary h2\">BMI Calculator</h1>\r\n                <form onSubmit={onSubmit} className=\"\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Weight(KG):</label>\r\n                                <input type=\"text\" className=\"form-control inp\" value={Weight} onChange={(e)=>setWeight(e.target.value)} required/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Heigh(m):</label>\r\n                                <input type=\"text\" className=\"form-control inp\" value={Height} onChange={(e)=>setHeight(e.target.value)} required/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center mb-3 mt-2\">\r\n                                <button type=\"submit\" className=\"btn button px-5\">Get BMI</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                {Alert && <div className=\"alert alert-danger\">Please Enter Valid datas</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form","import React from \"react\";\nimport BmiList from './components/BmiList';\nimport BmiScore from './components/BmiScore';\nimport Form from './components/Form';\nimport './app.css'\nimport { useState } from 'react';\nfunction App() {\n  const [Bmi, setBmi] = useState(\"00.00\");\n  const [BmiType, setBmiType] = useState(\"Category\");\n  const [ChangeWeight, setChangeWeight] = useState({ weight: \"\", type: \"\" });\n  const [Show, setShow] = useState(false);\n  const [BmiRange, setBmiRange] = useState({\n    underWeight: { low: (\"\") },\n    normal: { low: \"\", high: \"\" },\n    overWeight: { low: \"\", high: \"\" },\n    obesityOne: { low: \"\", high: \"\" },\n    obesityTwo: { low: \"\", high: \"\" },\n    obesityThree: { high: \"\" },\n  })\n  const onFormSub = (w, h) => {\n    let bmi = calBmi(w, h); //gets valve of bmi after calculation\n    setBmi(bmi);\n    setBmiType(weightType(bmi)); //gets type after checking conditions\n    const range = {\n      underWeight: { low: calWeight(18.499, h) },\n      normal: { low: calWeight(18.5, h), high: calWeight(24.999, h) },\n      overWeight: { low: calWeight(25, h), high: calWeight(29.999, h) },\n      obesityOne: { low: calWeight(30, h), high: calWeight(34.999, h) },\n      obesityTwo: { low: calWeight(35, h), high: calWeight(39.999, h) },\n      obesityThree: { high: calWeight(40, h) },\n    }\n    setBmiRange(range);\n    setChangeWeight(weightChange(bmi, w, range));\n    setShow(true);\n  }\n\n  const calBmi = (w, h) => (w / (h * h)).toFixed(2); //calculates bmi\n  const calWeight = (bmi, h) => (bmi * h * h).toFixed(2) //calculates weight\n  const weightChange = (bmi, w, range) => {\n    let changeObj;\n    if (bmi < 18.5) {\n      changeObj = { weight: (range.normal.low - w).toFixed(2), type: \"negative\" };\n      return changeObj;\n    } else if (bmi >= 25) {\n      changeObj = { weight: (w - range.normal.high).toFixed(2), type: \"positive\" };\n      return changeObj;\n    } else {\n      changeObj = { weight: 0, type: \"normal\" };\n      return changeObj;\n    }\n  }\n  const weightType = (bmi) => {     //checks condition to find type\n    if (bmi < 18.5) {\n      return \"Underweight\"\n    } else if (bmi >= 18.5 && bmi < 25) {\n      return \"Normal\"\n    } else if (bmi >= 25 && bmi < 30) {\n      return \"Overweight\"\n    } else if (bmi >= 30 && bmi < 35) {\n      return \"Obesity Class I\"\n    } else if (bmi >= 35 && bmi < 40) {\n      return \"Obesity Class II\"\n    } else if (bmi >= 40) {\n      return \"Obesity Class III\"\n    }\n  }\n  return (\n    <div>\n      <Form getData={onFormSub} />\n      <div className='results'>\n      {Show && (\n        <div className='bmi-data'>\n          <div className='col-12 col-md-6'>\n            <BmiScore bmiNo={Bmi} bmiName={BmiType} changeWeight={ChangeWeight} />\n          </div>\n          <div className='col-12 col-md-6'>\n            <BmiList range={BmiRange} bmi={Bmi} />\n          </div>\n        </div>\n      )}\n      </div>\n    </div>\n    );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n);"],"sourceRoot":""}